name: Build, Push, and Deploy tomcat App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: self-hosted
    env:
      IMAGE_NAME: 192.168.1.37:5000/tomcat-sample

    steps:
      - name: Checkout App Code
        uses: actions/checkout@v3
        with:
          path: tomcat-sampleapp

      - name: Login to Nexus Docker Registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login 192.168.1.37:5000 -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker Image
        working-directory: tomcat-sampleapp
        run: docker build -t $IMAGE_NAME:changeByAutomation  .

      - name: Push Docker Image
        run: docker push $IMAGE_NAME:changeByAutomation 

      - name: Checkout Helm Chart Repo
        uses: actions/checkout@v3
        with:
          repository: Manogithubnew/minikube-sampleapp
          path: helm-chart
          token: ${{ secrets.PAT_GITHUB }}

      - name: Read pipeline.json
        run: |
          echo "CHART=$(jq -r .chart tomcat-sampleapp/pipeline.json)" >> $GITHUB_ENV
          echo "VALUES_FILE=$(jq -r .valuesFile tomcat-sampleapp/pipeline.json)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(jq -r .releaseName tomcat-sampleapp/pipeline.json)" >> $GITHUB_ENV
          echo "NAMESPACE=$(jq -r .namespace tomcat-sampleapp/pipeline.json)" >> $GITHUB_ENV

      - name: Minikube Context Update
        run: minikube update-context

      - name: Create Namespace if Not Exists
        run: |
          kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      - name: Create Image Pull Secret
        env:
          DOCKER_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          DOCKER_EMAIL: ${{ secrets.DOCKER_EMAIL }}
        run: |
          kubectl create secret docker-registry image-registry-secret \
            --docker-server=192.168.1.37:5000 \
            --docker-username=$DOCKER_USERNAME \
            --docker-password=$DOCKER_PASSWORD \
            --docker-email=$DOCKER_EMAIL \
            --namespace=$NAMESPACE \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Patch default SA to use pull secret
        run: |
          kubectl patch serviceaccount default \
            -n $NAMESPACE \
            -p '{"imagePullSecrets":[{"name":"image-registry-secret"}]}' || true

      - name: Confirm values.yaml exists
        run: |
          echo "Looking for file: $VALUES_FILE"
          ls -l tomcat-sampleapp/config/stg/values.yaml || (echo "Missing values.yaml!" && exit 1)

      - name: Deploy using Helm
        run: |
          helm upgrade --install $RELEASE_NAME ./helm-chart \
            -n $NAMESPACE \
            -f tomcat-sampleapp/config/stg/values.yaml
